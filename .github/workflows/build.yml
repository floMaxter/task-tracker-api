name: Java Build & Push Microservices

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.matrix.outputs.services }}
    steps:
      - uses: actions/checkout@v4

      - name: Detect changes
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            auth-service:
              - 'auth-service/**'
            config-server:
              - 'config-server/**'
            discovery-server:
              - 'discovery-server/**'
            gateway:
              - 'gateway/**'
            notification-service:
              - 'notification-service/**'
            scheduler-service:
              - 'scheduler-service/**'
            task-service:
              - 'task-service/**'
            user-service:
              - 'user-service/**'
            all:
              - 'docker-compose*.yml'
              - '.github/**'
              - 'README.md'

      - name: Prepare matrix
        id: matrix
        run: |
          services=$(jq -r 'to_entries | map(select(.value==true) | .key) | @json' <<< '${{ steps.filter.outputs.changes }}')
          echo "services=$services" >> $GITHUB_OUTPUT

  build:
    needs: changes
    if: ${{ needs.changes.outputs.services != '[]' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ${{ fromJSON(needs.changes.outputs.services) }}
      max-parallel: 4
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Build JAR
        run: ./gradlew :${{ matrix.service }}:bootJar

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          build-args: |
            JAR_FILE=${{ matrix.service }}/build/libs/${{ matrix.service }}-0.0.1-SNAPSHOT.jar
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/task-tracker-${{ matrix.service }}:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/task-tracker-${{ matrix.service }}:${{ github.run_number }}

  deploy:
    needs: build
    if: needs.build.result == 'success'
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            cd /opt/task-tracker
            docker-compose -f docker-compose.prod.yml pull
            docker-compose -f docker-compose.prod.yml up -d
