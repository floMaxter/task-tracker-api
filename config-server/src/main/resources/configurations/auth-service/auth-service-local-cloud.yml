server:
  port: ${SERVER_PORT}

spring:
  config:
    import: optional:file:./user-service/.env.standalone[.properties]
    activate:
      on-profile: local-cloud
  kafka:
    producer:
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      properties:
        spring.json.type.mapping: userWelcomeEmailEvent:com.projects.tasktracker.auth.kafka.event.UserWelcomeEmailEvent
        delivery.timeout.ms: 20000
        request.timeout.ms: 10000
        linger.ms: 0
        enable.idempotence: true
        max.in.flight.requests.per.connection: 5
eureka:
  instance:
    hostname: ${SERVER_HOST:localhost}
  client:
    service-url:
      defaultZone: http://${DISCOVERY_SERVER_HOST}:${DISCOVERY_SERVER_PORT}/eureka/
    register-with-eureka: true
    fetch-registry: true

application:
  kafka:
    topics:
      email-sending-tasks: ${EMAIL_SENDING_TASKS_TOPIC:EMAIL_SENDING_TASKS}
  services:
    user-service:
      base-uri: http://user-service
      connection-timeout: 5s
      read-timeout: 10s
  jwt:
    access-token:
      private-key-path: keys/private.pem
      public-key-path: keys/public.pem
      expiration: ${ACCESS_TOKEN_EXPIRATION:30m}
    refresh-token:
      private-key-path: keys/private.pem
      public-key-path: keys/public.pem
      expiration: ${REFRESH_TOKEN_EXPIRATION:1d}
